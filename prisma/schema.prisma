generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Usuario {
  id                    String                @id @default(cuid())
  nome                  String
  email                 String                @unique
  senha                 String?
  cargo                 String?               @default("Operador")
  imagem                String?
  criadoEm              DateTime              @default(now())
  atualizadoEm          DateTime              @updatedAt
  atividades            Atividade[]
  comentarios           Comentario[]
  configuracoes         ConfiguracaoUsuario[]
  eventos               Evento[]
  logs                  Log[]
  manutencaoes          Manutencao[]
  notificacoesCriadas   Notificacao[]         @relation("notificacoesCriadas")
  notificacoesLidas     NotificacaoLida[]
  relatorios            Relatorio[]
  cidades               Cidade[]              @relation("CidadeToUsuario")
  notificacoesRecebidas Notificacao[]         @relation("notificacoesRecebidas")

  Participante Participante[]
}

model Cidade {
  id           String        @id @default(cuid())
  nome         String
  estado       String
  coordenadas  Json?
  criadoEm     DateTime      @default(now())
  atualizadoEm DateTime      @updatedAt
  caixas       Caixa[]
  eventos      Evento[]
  manutencoes  Manutencao[]
  notificacoes Notificacao[]
  relatorios   Relatorio[]
  rotas        Rota[]
  usuarios     Usuario[]     @relation("CidadeToUsuario")
}

model Rota {
  id           String        @id @default(cuid())
  nome         String
  tipoCabo     String
  fabricante   String?
  status       String        @default("Ativo")
  distancia    Float?
  profundidade Float?
  tipoPassagem String
  coordenadas  Json
  cor          String?
  observacoes  String?
  criadoEm     DateTime      @default(now())
  atualizadoEm DateTime      @updatedAt
  cidadeId     String
  arquivos     Arquivo[]
  caixas       Caixa[]
  comentarios  Comentario[]
  eventos      Evento[]
  fusoes       Fusao[]
  manutencoes  Manutencao[]
  notificacoes Notificacao[]
  relatorios   Relatorio[]
  cidade       Cidade        @relation(fields: [cidadeId], references: [id])
}

model Caixa {
  id           String        @id @default(cuid())
  nome         String
  tipo         String
  modelo       String
  capacidade   Int
  coordenadas  Json
  observacoes  String?
  status       String        @default("Ativo")
  criadoEm     DateTime      @default(now())
  atualizadoEm DateTime      @updatedAt
  cidadeId     String
  rotaId       String
  arquivos     Arquivo[]
  bandejas     Bandeja[]
  rota         Rota          @relation(fields: [rotaId], references: [id])
  cidade       Cidade        @relation(fields: [cidadeId], references: [id])
  comentarios  Comentario[]
  eventos      Evento[]
  fusoes       Fusao[]
  manutencoes  Manutencao[]
  notificacoes Notificacao[]
  portas       Porta[]
  relatorios   Relatorio[]
}

model Porta {
  id           String   @id @default(cuid())
  numero       Int
  status       String
  clienteNome  String?
  clienteId    String?
  observacoes  String?
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  caixaId      String
  caixa        Caixa    @relation(fields: [caixaId], references: [id])
}

model Bandeja {
  id           String   @id @default(cuid())
  numero       Int
  capacidade   Int
  observacoes  String?
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  caixaId      String
  caixa        Caixa    @relation(fields: [caixaId], references: [id])
  fusoes       Fusao[]
}

model Fusao {
  id           String   @id @default(cuid())
  fibraOrigem  Int
  fibraDestino Int
  tuboOrigem   String?
  tuboDestino  String?
  status       String
  cor          String?
  observacoes  String?
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  rotaOrigemId String
  caixaId      String
  bandejaId    String?
  bandeja      Bandeja? @relation(fields: [bandejaId], references: [id])
  caixa        Caixa    @relation(fields: [caixaId], references: [id])
  rotaOrigem   Rota     @relation(fields: [rotaOrigemId], references: [id])
}

model Manutencao {
  id             String        @id @default(cuid())
  dataInicio     DateTime
  titulo         String
  dataFim        DateTime?
  tipo           String
  descricao      String
  status         String
  prioridade     String
  criadoEm       DateTime      @default(now())
  atualizadoEm   DateTime      @updatedAt
  dataManutencao DateTime?
  cidadeId       String
  rotaId         String
  caixaId        String
  usuarioId      String
  responsavelId  String?
  arquivos       Arquivo[]
  comentarios    Comentario[]
  responsavel    Responsavel?  @relation(fields: [responsavelId], references: [id])
  usuario        Usuario       @relation(fields: [usuarioId], references: [id])
  caixa          Caixa         @relation(fields: [caixaId], references: [id])
  rota           Rota          @relation(fields: [rotaId], references: [id])
  cidade         Cidade        @relation(fields: [cidadeId], references: [id])
  notificacoes   Notificacao[]
  relatorios     Relatorio[]
  evento Evento[]
}

model Responsavel {
  id         String       @id @default(cuid())
  nome       String
  cargo      String
  telefone   String?
  email      String?
  criadoEm   DateTime     @default(now())
  manutencao Manutencao[]
}

model Comentario {
  id           String      @id @default(cuid())
  texto        String
  conteudo     String?
  criadoEm     DateTime    @default(now())
  atualizadoEm DateTime    @updatedAt
  usuarioId    String
  rotaId       String?
  caixaId      String?
  manutencaoId String?
  eventoId     String?
  relatorioId  String?
  relatorio    Relatorio?  @relation(fields: [relatorioId], references: [id])
  evento       Evento?     @relation(fields: [eventoId], references: [id])
  manutencao   Manutencao? @relation(fields: [manutencaoId], references: [id])
  caixa        Caixa?      @relation(fields: [caixaId], references: [id])
  rota         Rota?       @relation(fields: [rotaId], references: [id])
  usuario      Usuario     @relation(fields: [usuarioId], references: [id])
}

model Arquivo {
  id           String      @id @default(cuid())
  nome         String
  tipo         String
  url          String
  criadoEm     DateTime    @default(now())
  rotaId       String?
  caixaId      String?
  manutencaoId String?
  eventoId     String?
  relatorioId  String?
  relatorio    Relatorio?  @relation(fields: [relatorioId], references: [id])
  evento       Evento?     @relation(fields: [eventoId], references: [id])
  manutencao   Manutencao? @relation(fields: [manutencaoId], references: [id])
  caixa        Caixa?      @relation(fields: [caixaId], references: [id])
  rota         Rota?       @relation(fields: [rotaId], references: [id])
}

model Log {
  id         String   @id @default(cuid())
  acao       String
  entidade   String
  entidadeId String
  detalhes   Json?
  criadoEm   DateTime @default(now())
  usuarioId  String
  usuario    Usuario  @relation(fields: [usuarioId], references: [id])
}

model Atividade {
  id         String   @id @default(cuid())
  tipo       String
  entidade   String?
  entidadeId String?
  detalhes   Json?
  criadoEm   DateTime @default(now())
  usuarioId  String
  usuario    Usuario  @relation(fields: [usuarioId], references: [id])
}

model ConfiguracaoGlobal {
  id           String   @id @default(cuid())
  chave        String   @unique
  valor        Json
  descricao    String?
  categoria    String   @default("geral")
  editavel     Boolean  @default(true)
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
}

model ConfiguracaoUsuario {
  id           String   @id @default(cuid())
  chave        String
  valor        Json
  usuarioId    String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  usuario      Usuario  @relation(fields: [usuarioId], references: [id])

  @@unique([usuarioId, chave])
}

model Notificacao {
  id                 String            @id @default(cuid())
  titulo             String
  conteudo           String
  tipo               String
  prioridade         String
  criadoEm           DateTime          @default(now())
  atualizadoEm       DateTime          @updatedAt
  cidadeId           String?
  caixaId            String?
  rotaId             String?
  manutencaoId       String?
  eventoId           String?
  relatorioId        String?
  criadorId          String
  cargoDestinatarios String
  criador            Usuario           @relation("notificacoesCriadas", fields: [criadorId], references: [id])
  relatorio          Relatorio?        @relation(fields: [relatorioId], references: [id])
  evento             Evento?           @relation(fields: [eventoId], references: [id])
  manutencao         Manutencao?       @relation(fields: [manutencaoId], references: [id])
  rota               Rota?             @relation(fields: [rotaId], references: [id])
  caixa              Caixa?            @relation(fields: [caixaId], references: [id])
  cidade             Cidade?           @relation(fields: [cidadeId], references: [id])
  notificacoesLidas  NotificacaoLida[]
  destinatarios      Usuario[]         @relation("notificacoesRecebidas")
}

model NotificacaoLida {
  id            String      @id @default(cuid())
  lida          Boolean     @default(false)
  lidaEm        DateTime?
  criadoEm      DateTime    @default(now())
  notificacaoId String
  usuarioId     String
  usuario       Usuario     @relation(fields: [usuarioId], references: [id])
  notificacao   Notificacao @relation(fields: [notificacaoId], references: [id], onDelete: Cascade)

  @@unique([notificacaoId, usuarioId])
}

model Evento {
  id           String        @id @default(cuid())
  titulo       String
  descricao    String?
  tipo         String
  status       String
  localizacao       String?
  dataInicio   DateTime
  dataFim      DateTime?
  prioridade   String?
  criadoEm     DateTime      @default(now())
  atualizadoEm DateTime      @updatedAt
  cidadeId     String?
  rotaId       String?
  caixaId      String?
  usuarioId    String?
  arquivos     Arquivo[]
  comentarios  Comentario[]
  usuario      Usuario?      @relation(fields: [usuarioId], references: [id])
  caixa        Caixa?        @relation(fields: [caixaId], references: [id])
  rota         Rota?         @relation(fields: [rotaId], references: [id])
  cidade       Cidade?       @relation(fields: [cidadeId], references: [id])
  manutencao   Manutencao[]
  notificacoes Notificacao[]
  participantes Participante[]
}

model Relatorio {
  id           String        @id @default(cuid())
  titulo       String
  descricao    String
  tipo         String
  dataInicio   DateTime
  dataFim      DateTime
  dados        Json?
  observacoes  String?
  criadoEm     DateTime      @default(now())
  atualizadoEm DateTime      @updatedAt
  cidadeId     String?
  caixaId      String?
  rotaId       String?
  manutencaoId String?
  criadorId    String
  arquivos     Arquivo[]
  comentarios  Comentario[]
  notificacoes Notificacao[]
  criador      Usuario       @relation(fields: [criadorId], references: [id])
  manutencao   Manutencao?   @relation(fields: [manutencaoId], references: [id])
  rota         Rota?         @relation(fields: [rotaId], references: [id])
  caixa        Caixa?        @relation(fields: [caixaId], references: [id])
  cidade       Cidade?       @relation(fields: [cidadeId], references: [id])
  participantes Participante[]

  
}
model Participante {
  id           String        @id @default(cuid())
  nome         String
  usuarios     Usuario[]
  relatorio Relatorio[]
  evento Evento[]
}



